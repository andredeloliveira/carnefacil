"use strict";var ApplicationConfiguration=function(){var applicationModuleName="carnefacil",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("carnes"),ApplicationConfiguration.registerModule("clientes"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("parcelas"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("carnes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Carnes","carnes","dropdown","/carnes(/create)?"),Menus.addSubMenuItem("topbar","carnes","List Carnes","carnes"),Menus.addSubMenuItem("topbar","carnes","New Carne","carnes/create")}]),angular.module("carnes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCarnes",{url:"/carnes",templateUrl:"modules/carnes/views/list-carnes.client.view.html"}).state("createCarne",{url:"/carnes/create",templateUrl:"modules/carnes/views/create-carne.client.view.html"}).state("viewCarne",{url:"/carnes/:carneId",templateUrl:"modules/carnes/views/view-carne.client.view.html"}).state("editCarne",{url:"/carnes/:carneId/edit",templateUrl:"modules/carnes/views/edit-carne.client.view.html"})}]),angular.module("carnes").controller("CarnesController",["$scope","$stateParams","$location","Authentication","Carnes","Clientes","Parcelas",function($scope,$stateParams,$location,Authentication,Carnes,Clientes,Parcelas){$scope.authentication=Authentication,$scope.clientes=Clientes.query(),$scope.carnesBusca=[],$scope.showParcelas=0,$scope.showCarnes=0,$scope.parcelasCarne=Parcelas.query(),$scope.filterParcelasByCarne=function(idCarne){console.log("entered the damn function"),""===this.idCarne&&($scope.showCarnes=0),$scope.carnesBusca.length>0&&($scope.carnesBusca=[]);for(var i=0;i<$scope.carnes.length;i++)$scope.carnes[i]._id===idCarne&&$scope.carnesBusca.push($scope.carnes[i]);$scope.carnesBusca.length>0?($scope.showCarnes=1,this.idCarne=""):($scope.showCarnes=0,this.idCarne=""),console.log($scope.carnesBusca)},$scope.toShowCarnes=function(number){return number===$scope.showCarnes?!0:!1},$scope.mostrarTodosOsCarnes=function(){$scope.showCarnes=0},$scope.createParcelas=function(id){for(var valorParcelas=this.total/this.nparcelas,dataAtual=Date.now(),i=1;i<=this.nparcelas;i++){var parcela=new Parcelas({carne:id,dataVencimento:dataAtual+262974e4,valor:valorParcelas});dataAtual+=262974e4,parcela.$save()}console.log($scope.parcelasImpressao)},$scope.create=function(){var carne=new Carnes({cliente:this.cliente._id,nparcelas:this.nparcelas,total:this.total});carne.$save(function(response){$location.path("carnes/"+response._id),$scope.createParcelas(response._id),$scope.nparcelas=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(carne){if(carne){carne.$remove();for(var i in $scope.carnes)$scope.carnes[i]===carne&&$scope.carnes.splice(i,1)}else $scope.carne.$remove(function(){$location.path("carnes")})},$scope.update=function(){var carne=$scope.carne;carne.$update(function(){$location.path("carnes/"+carne._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.carnes=Carnes.query()},$scope.findOne=function(){$scope.carne=Carnes.get({carneId:$stateParams.carneId})},$scope.filtrarPorCarnes=function(parcela){return parcela.carne._id===$scope.carne._id}}]),angular.module("carnes").factory("Carnes",["$resource",function($resource){return $resource("carnes/:carneId",{carneId:"@_id"},{update:{method:"PUT"}})}]),angular.module("clientes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Clientes","clientes","dropdown","/clientes(/create)?"),Menus.addSubMenuItem("topbar","clientes","List Clientes","clientes"),Menus.addSubMenuItem("topbar","clientes","New Cliente","clientes/create")}]),angular.module("clientes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listClientes",{url:"/clientes",templateUrl:"modules/clientes/views/list-clientes.client.view.html"}).state("createCliente",{url:"/clientes/create",templateUrl:"modules/clientes/views/create-cliente.client.view.html"}).state("viewCliente",{url:"/clientes/:clienteId",templateUrl:"modules/clientes/views/view-cliente.client.view.html"}).state("editCliente",{url:"/clientes/:clienteId/edit",templateUrl:"modules/clientes/views/edit-cliente.client.view.html"})}]),angular.module("clientes").controller("ClientesController",["$scope","$stateParams","$location","Authentication","Clientes",function($scope,$stateParams,$location,Authentication,Clientes){$scope.authentication=Authentication,$scope.showClientes=0,$scope.clientesBusca=[],$scope.searchClientes=function(nomeCliente){console.log("entered the damn function");var newNomeCliente=nomeCliente.toLowerCase();""===this.nomeCliente&&($scope.showClientes=0),this.clientesBusca.length>0&&(this.clientesBusca=[]);for(var i=0;i<$scope.clientes.length;i++){var newName=$scope.clientes[i].name.toLowerCase(),contain=newName.indexOf(newNomeCliente);contain>-1&&$scope.clientesBusca.push($scope.clientes[i])}$scope.clientesBusca.length>0?($scope.showClientes=1,this.nomeCliente=""):($scope.showClientes=0,this.nomeCliente=""),console.log($scope.clientesBusca)},$scope.toShowClientes=function(number){return number===$scope.showClientes?!0:!1},$scope.mostrarTodosOsClientes=function(){$scope.showClientes=0},$scope.create=function(){var enderecocompleto=this.rua+" , "+this.numero+" "+this.complemento,cliente=new Clientes({name:this.name,endereco:enderecocompleto,cpf:this.cpf,rg:this.rg,telefones:[]});cliente.telefones.push(this.telefone),cliente.telefones.push(this.celular),cliente.$save(function(response){$location.path("clientes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(cliente){if(cliente){cliente.$remove();for(var i in $scope.clientes)$scope.clientes[i]===cliente&&$scope.clientes.splice(i,1)}else $scope.cliente.$remove(function(){$location.path("clientes")})},$scope.update=function(){var cliente=$scope.cliente;cliente.$update(function(){$location.path("clientes/"+cliente._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.clientes=Clientes.query()},$scope.findOne=function(){$scope.cliente=Clientes.get({clienteId:$stateParams.clienteId})}}]),angular.module("clientes").factory("Clientes",["$resource",function($resource){return $resource("clientes/:clienteId",{clienteId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("parcelas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Parcelas","parcelas","dropdown","/parcelas(/create)?"),Menus.addSubMenuItem("topbar","parcelas","List Parcelas","parcelas"),Menus.addSubMenuItem("topbar","parcelas","New Parcela","parcelas/create")}]),angular.module("parcelas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listParcelas",{url:"/parcelas",templateUrl:"modules/parcelas/views/list-parcelas.client.view.html"}).state("createParcela",{url:"/parcelas/create",templateUrl:"modules/parcelas/views/create-parcela.client.view.html"}).state("viewParcela",{url:"/parcelas/:parcelaId",templateUrl:"modules/parcelas/views/view-parcela.client.view.html"}).state("editParcela",{url:"/parcelas/:parcelaId/edit",templateUrl:"modules/parcelas/views/edit-parcela.client.view.html"})}]),angular.module("parcelas").controller("ParcelasController",["$scope","$stateParams","$location","Authentication","Parcelas","Carnes","Clientes",function($scope,$stateParams,$location,Authentication,Parcelas,Carnes,Clientes){$scope.authentication=Authentication,$scope.newValor=0,$scope.auxParcelas=[],$scope.showParcelasAll=0,$scope.create=function(){var parcela=new Parcelas({name:this.name});parcela.$save(function(response){$location.path("parcelas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(parcela){if(parcela){parcela.$remove();for(var i in $scope.parcelas)$scope.parcelas[i]===parcela&&$scope.parcelas.splice(i,1)}else $scope.parcela.$remove(function(){$location.path("parcelas")})},$scope.update=function(){var parcela=$scope.parcela,oldValor=$scope.parcela.valor,newValor=oldValor*$scope.parcela.taxaJuros/100;console.log("novo valor "+newValor),parcela.valor=oldValor+newValor,0===$scope.isPaga?parcela.isPaga=!1:$scope.isPaga=!0,console.log(parcela),parcela.$update(function(){$location.path("parcelas/"+parcela._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.parcelas=Parcelas.query()},$scope.findOne=function(){$scope.parcela=Parcelas.get({parcelaId:$stateParams.parcelaId}),console.log($scope.parcela)},$scope.filterFunction=function(parcela){return parcela.isPaga===!1},$scope.filterParcelasByCarne=function(idCarne){console.log("entered the damn function"),""===this.idCarne&&($scope.showParcelasAll=0),$scope.showParcelasAll.length>0&&($scope.showParcelasAll=[]);for(var i=0;i<$scope.parcelas.length;i++)$scope.parcelas[i]._id===idCarne&&$scope.auxParcelas.push($scope.parcelas[i]);$scope.auxParcelas.length>0?($scope.showParcelasAll=1,this.idCarne=""):($scope.showParcelasAll=0,this.idCarne=""),console.log($scope.auxParcelas)},$scope.showParcelas=function(number){return number===$scope.showParcelasAll?!0:!1},$scope.mostrarTodasAsParcelas=function(){$scope.showParcelasAll=0}}]),angular.module("parcelas").factory("Parcelas",["$resource",function($resource){return $resource("parcelas/:parcelaId",{parcelaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);